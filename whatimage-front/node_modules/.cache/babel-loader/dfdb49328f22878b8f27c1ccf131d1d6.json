{"ast":null,"code":"var _jsxFileName = \"/home/shiva/Desktop/whatimage/whatimage-front/src/components/Classifier/Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Spinner, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass Classifier extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      files: [],\n      isLoading: false\n    };\n\n    this.onDrop = files => {\n      this.setState({\n        isLoading: true\n      });\n      this.loadImage(files);\n    };\n\n    this.loadImage = files => {\n      setTimeout(() => {\n        this.setState({\n          files,\n          isLoading: false\n        }, () => {\n          console.log(this.state.files);\n        });\n      }, 1000);\n    };\n  }\n\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/React.createElement(\"li\", {\n      key: file.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, file.name, \" - \", file.size, \" bytes\"));\n    return /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      accept: \"image/png, image/jpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, ({\n      isDragActive,\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n      className: 'dropzone back'\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-image mb-2 text-muted\",\n      style: {\n        fontSize: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, isDragActive ? \" Drag some images\" : \"Drag 'n' drop some files here, or click to select files\")), /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, files), this.state.files.length > 0 && /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      size: \"lg\",\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"select image\"), this.state.isLoading && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Loading...\"))));\n  }\n\n}\n\nexport default Classifier;","map":{"version":3,"sources":["/home/shiva/Desktop/whatimage/whatimage-front/src/components/Classifier/Classifier.js"],"names":["React","Component","Dropzone","Spinner","Button","axios","Classifier","state","files","isLoading","onDrop","setState","loadImage","setTimeout","console","log","render","map","file","name","size","isDragActive","getRootProps","getInputProps","className","fontSize","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport {Spinner, Button} from 'react-bootstrap'\nimport axios from 'axios'\n\nclass Classifier extends Component {\n    state = { \n        files : [],\n        isLoading: false,\n     }\n    //  componentDidMount(){\n    //      this.getImages()\n    //  }\n    //  getImages = () =>{\n    //      axios.get('http://127.0.0.1:8000/api/images/', {\n    //         headers: {\n    //             'accept': 'application/json'\n    //      }\n    //     }).then(resp=>{\n    //         console.log(resp);\n    //     })\n    //  }\n     onDrop =(files)=>{\n        this.setState({\n            isLoading: true,\n            })\n        this.loadImage(files)\n\n     }\n     loadImage=(files)=>{\n        setTimeout(()=>{\n            this.setState({\n                files,\n                isLoading: false\n            },()=>{\n                console.log(this.state.files)\n            }\n            )\n        }, 1000)\n     }\n\n    render() { \n        const files = this.state.files.map(file => (\n            <li key={file.name}>\n              {file.name} - {file.size} bytes\n            </li>\n          ));\n        return ( \n            <Dropzone onDrop={this.onDrop} accept='image/png, image/jpeg'>\n            {({isDragActive, getRootProps, getInputProps}) => (\n              <section className=\"container\">\n                <div {...getRootProps({className: 'dropzone back'})}>\n                  <input {...getInputProps()} />\n                  <i className=\"far fa-image mb-2 text-muted\" style={{fontSize:100}}></i>\n                  <p className=\"text-muted\">{isDragActive ? \" Drag some images\" : \"Drag 'n' drop some files here, or click to select files\"}</p>\n                </div>\n                <aside>\n                  \n                  {files}\n                </aside>\n                {this.state.files.length >0 &&\n                <Button variant='info' size='lg' className='mt-3'>select image</Button> }\n                {this.state.isLoading &&\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n    }\n              </section>\n            )}\n          </Dropzone>\n         );\n    }\n}\n \nexport default Classifier;"]},"metadata":{},"sourceType":"module"}